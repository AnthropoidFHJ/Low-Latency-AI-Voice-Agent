version: '3.8'

services:
  # Backend service with FastAPI + Pipecat
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - HOST=0.0.0.0
      - PORT=8000
      - DEBUG=true
      - CORS_ORIGINS=http://localhost:3000,http://127.0.0.1:3000
      - LOG_LEVEL=INFO
    env_file:
      - ./backend/.env
    volumes:
      - ./backend/app:/app/app:ro
    networks:
      - voice-agent-network
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8000/health" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Frontend service with Next.js
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_BACKEND_URL=ws://backend:8000
    env_file:
      - ./frontend/.env.local
    depends_on:
      - backend
    networks:
      - voice-agent-network
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:3000" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Redis for caching and session management (optional)
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - voice-agent-network
    restart: unless-stopped
    command: redis-server --appendonly yes --maxmemory 512mb --maxmemory-policy allkeys-lru

  # Nginx reverse proxy for production (optional)
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - frontend
      - backend
    networks:
      - voice-agent-network
    restart: unless-stopped
    profiles:
      - production

volumes:
  redis_data:
    driver: local

networks:
  voice-agent-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
